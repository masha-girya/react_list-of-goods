{"version":3,"sources":["App.tsx","components/Goods.tsx","index.tsx"],"names":["SortType","Goods","React","memo","goods","map","good","goodsFromServer","getReorderedGoods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","App","state","NONE","sortBy","this","setState","isNeedToReset","className","type","classNames","onClick","handleGoodSort","handleGoodReverse","handleActionsReset","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCZQC,EAAQC,IAAMC,MACzB,gBAAGC,EAAH,EAAGA,MAAH,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACIA,GADoBA,WDLnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdJ,EADK,GAGJ,IADCK,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOP,GAmBzB,OAjBAO,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKT,EAASe,SACZ,OAAQF,EAAMG,cAAcF,GAE9B,KAAKd,EAASiB,OACZ,OAAQJ,EAAMK,OAASJ,EAAMI,OAE/B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAlCJX,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMoB,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUT,EAASsB,MAHvB,oDAME,SAAeC,GACbC,KAAKC,SAAS,CAAEhB,SAAUc,MAP9B,+BAUE,WACEC,KAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBX,YAAaW,EAAMX,iBAZzB,gCAgBE,WACEc,KAAKC,SAAS,CACZhB,SAAUT,EAASsB,KACnBZ,YAAY,MAnBlB,oBAuBE,WAAU,IAAD,OACP,EAAiCc,KAAKH,MAA9BZ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACZgB,EAAgBjB,IAAaT,EAASsB,MAAQZ,EAEpD,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaT,EAASe,WAEtCe,QAAS,kBAAM,EAAKC,eAAe/B,EAASe,WAN9C,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaT,EAASiB,SAEtCa,QAAS,kBAAM,EAAKC,eAAe/B,EAASiB,SAN9C,4BAWA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAanB,IAEjBoB,QAAS,kBAAM,EAAKE,qBANtB,qBAWCN,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKG,sBAHtB,sBAUJ,cAAChC,EAAD,CAAOG,MAAOI,EAAkBD,EAAiBiB,KAAKH,gBA1E9D,GAAyBnB,IAAMgC,WE1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0d5496a5.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Goods } from './components/Goods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return (good1.localeCompare(good2));\n\n      case SortType.LENGTH:\n        return (good1.length - good2.length);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleGoodSort(sortBy: SortType) {\n    this.setState({ sortType: sortBy });\n  }\n\n  handleGoodReverse() {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  }\n\n  handleActionsReset() {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  }\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const isNeedToReset = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.handleGoodSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.handleGoodSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => this.handleGoodReverse()}\n          >\n            Reverse\n          </button>\n\n          {isNeedToReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.handleActionsReset()}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <Goods goods={getReorderedGoods(goodsFromServer, this.state)} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport 'bulma/css/bulma.css';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const Goods = React.memo<Props>(\n  ({ goods }) => (\n    <ul>\n      {goods.map(good => (\n        <li data-cy=\"Good\" key={good}>\n          { good }\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}